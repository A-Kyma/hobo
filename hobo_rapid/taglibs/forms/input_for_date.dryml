<!-- A date picker, using the `select_date` helper from Rails

### Attributes

 - all the options of select_date and date_select are passed to the select_date Rails
 helper

All the other attributes are passed to the `select_date` helper as the html-options hash.

The menus default to the current date if the current value is nil.

Examples:

   - override the input for date tag in a form

     <my-special-date-view:>
        <select-date start-year="&1940" order="day,month,year" />
     </my-special-date-view:>

   - override the input tag application-wide

     <def tag='input' for='date'>
       <select-date merge order="day,month,year" start-year="&1940" />
     </def>

  -->
<def tag="select-date" attrs="use-month-numbers, use-short-month, add-month-numbers, use-month-names, date-separator, start-year, end-year, discard-day, discard-month, discard-year, order, include-blank, default, disabled, prompt, prefix">
  <% order = order.nil? ? [:year, :month, :day] : comma_split(order).*.to_sym -%>
  <%= select_date(this || current_time,
                  (all_attributes - attributes.keys).reverse_merge(:prefix => param_name_for_this).merge(:order => order),
                  attributes - [:name]) %>
</def>


<%# Selects the `<datepicker>` as the default input for date.   To
  choose the older `<select-date>` input, add this to your
  application.dryml:

     <def tag='input' for='date'>
       <select-date merge/>
     </def>
%>
<def tag="input" for="Date">
  <datepicker merge/>
</def>
