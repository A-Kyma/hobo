# DRYML

DRYML is the Don't Repeat Yourself Markup Language.  It uses an XML
syntax and is best at creating XML documents.  It could be used to
create other forms of plain-text documents, but the syntax is not
optimized for that and you may end up with extra carriage returns.
(Which would be a bug, so please send test cases).

DRYML was created for the Hobo project, but this is an extraction from
that project and can be used separately.

# How to use with rails but without Hobo

- install both HoboSupport and Dryml as a plugin or gem

- create an `application.dryml`

    $ mkdir app/views/taglibs
    $ touch app/views/taglibs/application.dryml

- create `config/initializers/dryml.rb`

    require 'dryml'
    require 'dryml/template'
    require 'dryml/dryml_generator'
    Dryml.enable

Now you can use templates that end in ".dryml".  Such templates will
ignore layouts.

# How to use outside of Rails

(Note:  you don't need Rails, but you do need ActionView, although you
can use a dummy view)

Compile your template:  (*path* should be an identifying string useful
for caching and error messages).

     renderer_class = Dryml.make_renderer_class(src, path)

If you don't have a view, you need one:

     view = ActionView::Base.new(ActionController::Base.view_paths, {})  

Instantiate your template:

     renderer = renderer_class.new(view_name, view)

Render:

     puts renderer.render_page(page_this, page_locals)
