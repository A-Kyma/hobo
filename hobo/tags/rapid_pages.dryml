<def tag="base-page" attrs="title, doctype">
  <% title ||= request.request_uri %>
  <doctype version="&doctype || 'HTML 4.01 STRICT'"/>
  <html>
    <head param>
      <title param><%= title %></title>
      <do param="stylesheets">
        <stylesheet name="reset"/>
        <stylesheet name="application"/>
      </do>
      <do param="scripts">
        <javascript name="prototype,effects,dragdrop,controls,application"/>
      </do>
    </head>
    <body onload="Hobo.applyEvents();" param>
    </body>
  </html>
</def>


<def tag="page">
  <base-page merge>
    <stylesheets: param>
      <stylesheet name="reset"/>
      <stylesheet name="hobo-rapid"/>
      <stylesheet name="application"/>
    </stylesheets>

    <scripts: param>
      <javascript name="prototype, effects, dragdrop, controls, lowpro, hobo-rapid, application"/>
      <hobo-rapid-javascripts param/>
    </scripts>

    <body: param>
      <div class="page-wrapper" param="wrapper">
        <ajax-progress/>
        <header class="page-header" param>
          <nav param>
            <magic-nav class="main-nav" param="main-nav"/>
            <account-nav if="&Hobo::UserController.user_models.first" param/>
          </nav>
        </header>
        <section class="page-content" param="content">
          <header class="content-header" param="content-header"/>
          <flash-message param/>
          <section class="content-body" param="content-body"/>
          <footer class="content-footer" param="content-footer"/>
        </section>
        <footer class="page-footer" param/>
      </div>
    </body>
  </base-page>
</def>

<def tag="page-without-aside" alias-of="page"/>
<def tag="page-with-aside">
  <page-without-aside merge>
    <content:>
      <section class="main-content" param="main-content">
        <default-tagbody for="content"/>
      </section>
      <aside class="aside-content" param/>
    </content>
  </page-without-aside>
</def>
      

<def tag="page-for-index"><page merge/></def>
<def tag="page-for-new"><page merge/></def>
<def tag="page-for-show"><page merge/></def>
<def tag="page-for-edit"><page merge/></def>
<def tag="page-for-new-in-collection"><page merge/></def>
<def tag="page-for-show-collection"><page merge/></def>


<def tag="index-page">
  <% model_name = @model.name.titleize %>
  <page-for-index title="All #{model_name.pluralize}" merge>
    <body: class="index-page #{@model.name.underscore.pluralize}" param/>
    <content-header: param>
      <heading param><%= model_name.pluralize %></heading>
      <p class="note" param>There <do with="&@model"><count part="item-count" prefix="are"/></do></p>
    </content-header>

    <content-body: param>
      <nav param="top-pagination-nav"><page-nav/></nav>
      
      <table param>
        <tr:><td><a/></td><td><delete-button update="item-count"/></td></tr>
      </table>
      
      <nav param="bottom-pagination-nav"><page-nav/></nav>
    </content-body>
    
    <content-footer: param>
      <a to="&@model" action="new" param="new-link"/>
    </content-footer>
  </page-for-index>
</def>


<def tag="new-page">
  <page-for-new title="New #{type_name}" merge>
    <body: class="new-page #{type_name.underscore}" param/>
    <content-header: param>
      <heading param>New <type-name title/></heading>
    </content-header>

    <content-body: param>
      <error-messages param/>

      <form param>
        <field-list skip-associations="has_many" param/>
        <submit label="Create" param/>
      </form>
    </content-body>
  </page-for-new>
</def>


<def tag="show-page">
  <% has_many_assocs = this.class.reflections.values.map do |refl|
       this.send(refl.name) if Hobo.simple_has_many_association?(refl)
     end.compact
  %>
  <page-for-show merge title="#{name :no_wrapper => true}">
    <body: class="show-page #{type_name.underscore}" param/>
    <content-header: param>
      <heading param><type-name/><if test="&this.respond_to? :name">: <editor:name/></if></heading>
      <delete-button in-place="&false" param/>
    </content-header>
    
    <content-body: param>
      <field-list skip="name" tag="editor" param/>

      <nav param="new-links">
        <ul with="&has_many_assocs">
          <li:><a action="new"/></li>
        </ul>
      </nav>
    </content-body>
  </page-for-show>
</def>


<def tag="edit-page">
  <page-for-edit merge>    
    <body: class="edit-page #{this.class.name.underscore}" param/>
    <content-header: param>
      <heading><type-name/><if test="&this.respond_to? :name">: <name/></if></heading>
      <delete-button in-place="&false" param/>
    </content-header>

    <content-body: param>
      <error-messages param/>
      <form param>
        <field-list skip-associations="has_many" param/>
        <submit label="Save"/>
      </form>
          
    </content-body>
  </page-for-edit>
</def>


<def tag="new-in-collection-page">
  <page-for-new-in-collection title="New #{type_name}" merge>
    <body: class="new-in-collection-page #{type_name(:with => @owner)} #{type_name}" param/>
    <content-header: param>
      <heading param>New <type-name/></heading>
      <sub-heading param>For: <a with="&@owner" /></sub-heading>
    </content-header>

    <content-body: param>
      <error-messages/>

      <form param>
        <field-list skip-associations="has_many" param/>
        <submit label='Add to #{name(:with => @owner, :no_wrapper => true)}' param/>
      </form>
    </content-body>
  </page-for-new-in-collection>
</def>


<def tag="show-collection-page">
  <% title = "#{@reflection.name.to_s.titleize} for #{name(:with => @owner)}" %>
  <page-for-show-collection title="&title" merge>
    <body: class="show-collection-page #{type_name(:with => @owner)} #{type_name(:pluralize => true)}"
          param/>
    <content-header: param>
      <nav>Back to <a with="&@owner"/></nav>
      <heading><%= title %></heading>
      <sub-heading><count with="&@pages.item_count" label="&@reflection.klass.name.titleize"/></sub-heading>
    </content-header>

    <content-body: param>
      <nav param="top-pagination-nav"><page-nav/></nav>

      <table param="Table">
        <tr:>
          <if test="&can_view?">
            <td><a/></td><td><delete-button/></td>
          </if>
        </tr>
      </table>
      
      <nav param="bottom-pagination-nav"><page-nav param/></nav>
      
      <nav if="&Hobo.simple_has_many_association?(@association)" param="new-link">
        <a to="&@association" action="new"/>
      </nav>
    </content-body>
  </page-for-show-collection>
</def>


<def tag="login-page" attrs="remember-me">
  <page title="Log In" merge>
    <body: class="login-page" param/>
    <nav: replace/>
    <content-header: param>
      <heading param>Log In</heading>
    </content-header>

    <content-body: param>
      <form action="&request.request_uri" param>
        <labelled-item-list>
          <labelled-item>
            <item-label param="login-label"><%= model.login_attr.to_s.titleize %></item-label>
            <item-value><input type="text" name="login" id="login" param="login-input" /></item-value>
          </labelled-item>

          <labelled-item>
            <item-label param="password-label">Password</item-label>
            <item-value><input type="password" name="password" id="password" param="password-input"/></item-value>
          </labelled-item>

          <labelled-item if="&remember_me">
            <item-label class="field-label" param="remember-me-label">Remember me:</item-label>
            <item-value><input type="checkbox" name="remember_me" id="remember-me" param="remember-me-input"/></item-value>
          </labelled-item>
        </labelled-item-list>
        <submit label='Log in' param/>
      </form>
    </content-body>
  </page>
</def>


<def tag="signup-page">
  <page title="Sign Up" merge>
    <body: class="signup-page" param/>
    <nav: replace/>
    <content-header: param>
      <heading param>Sign Up</heading>
    </content-header>
    
    <content-body: param>
      <error-messages/>
      <form action="&request.request_uri" param>
        <field-list fields="login, password, password_confirmation" param>
          <password-confirmation-label:>Confirm Password</password-confirmation-label>
        </field-list>

        <submit label='Sign Up'/>
      </form>
    </content-body>

  </page>
</def>


<def tag="permission-denied-page">
  <page merge>
    <content-header: param>
      <heading param>That operation is not allowed</heading>
    </content-header>
  </page>
</def>

<def tag="not-found-page">
  <page merge>
    <content-header: param>
      <heading param>The page you were looking for could not be found</heading>
    </content-header>
  </page>
</def>

<def tag="doctype" attrs="version"><%=
  case version.upcase
    when "HTML 4.01 STRICT"
      '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" ' + 
        '"http://www.w3.org/TR/html4/strict.dtd">'
    when "HTML 4.01 TRANSITIONAL"
      '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" ' + 
        '"http://www.w3.org/TR/html4/loose.dtd">'
    when "XHTML 1.0 STRICT"
      '!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" ' + 
        '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">'
    when "XHTML 1.0 TRANSITIONAL"
      '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ' + 
        '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'
    when "XHTML 1.1"
      '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" ' + 
        '"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">'
  end
%></def>

<def tag="stylesheet" attrs="name, media">
  <repeat with="&comma_split(name)">
    <link href="#{base_url}/stylesheets/#{this}.css" media="#{ media || 'all' }"
          rel="stylesheet" type="text/css" />
  </repeat>
</def>

<def tag="javascript" attrs="name">
  <if test="&name.is_a?(Symbol)">
    <%= javascript_include_tag name %>
  </if>
  <else>
    <repeat with="&comma_split(name)">
      <%= javascript_include_tag this %>
    </repeat>
  </else>
</def>

<def tag="flash-message" attrs="type">
  <% type = type ? type.to_sym : :notice %>
  <div class="flash #{type}" if="&flash[type]" merge-attrs><%= flash[type] %></div>
</def>

<def tag="ajax-progress">
  <div id="ajax-progress">
    <div>
      <span id="ajax-progress-text"></span>
    </div>
  </div>
</def>


