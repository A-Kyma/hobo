<taglib module="Hobo::Rapid"/>

<taglib src="rapid_pages"/>
<taglib src="rapid_editing"/>
<taglib src="rapid_navigation"/>

<def tag="clearer"><div class='clearer'>&nbsp;</div></def>

<def tag="object_table" attrs="fields, skip_fields, associations">
  <% fields = if fields.nil?
                this.class.content_columns.every(:name) - %w{created_at updated_at}
              else
                comma_split(fields)
              end
     fields -= comma_split(skip_fields) if skip_fields
     options = add_classes(options, "object_table", ("new_record" if this.new_record?))
     # force load
     Hobo.models
  %>
  <table xattrs="">
    <if q="#this.new_record? && 'type'.in?(this.class.column_names) && !this.class.send(:subclasses).empty?">
      <tr>
        <td class="field_label">Type:</td>
        <td><sti_type_field/></td>
      </tr>        
    </if>


    <% for field in fields.select{|f| can_view?(this, f)} %>
      <tr>
        <td class="field_label"><%= no_break(field.titleize) %>:</td>
        <td><edit attr="#field" /></td>
      </tr>
    <% end %>

    <% associations = if associations == '*'
                        this.class.reflections.values.every(:name)
                      elsif associations == 'belongs_to'
                        this.class.reflections.values.oselect{macro == :belongs_to}.every(:name)
                      else
                        comma_split(associations)
                      end
    %>
    <% for assoc in associations %>
      <tr>
        <td class="field_label"><%= no_break(assoc.to_s.titleize) %>:</td>
        <td><edit attr="#assoc"/></td>
      </tr>
    <% end %>

    <tagbody/>

  </table>
</def>


<def tag="has_many_table" attrs="part_id, delete_buttons, headings, id">
  <table_for headings="#headings" xattrs="">
    <:empty>
      <p>There are no <%= this_type.klass.name.titleize.pluralize.downcase %></p>
    </:empty>

    <tagbody/>

    <if q="#delete_buttons != false and can_delete?(this)">
      <td><delete_button/></td>
    </if>
  </table_for>
  <div>
    <create_button update="#id || part_id"/>
  </div>
</def>


<def tag="ul_for" attrs="else">
  <if q="#this.empty? and else_">
    <%= else_ %>
  </if>
  <else>
    <ul xattrs="">
      <% even_odd = "odd" %>
      <repeat>
        <if_can_view>
          <li class="<%= even_odd %>" model_id="<%= dom_id this %>">
            <%= tagbody.nil? ? object_link : tagbody.call %>
          </li>
        </if_can_view>
        <% even_odd = even_odd == "even" ? "odd" : "even" %>
      </repeat>
    </ul>
  </else>
</def>


<def tag="table_for" attrs="headings, empty, row_class, footer">
  <if q="#this.empty? and empty">
    <%= empty %>
  </if>
  <else>
    <table xattrs="">
      <if q="#headings"><tr><%= headings %></tr></if>
      <% even_odd = "odd" %>
      <repeat>
        <if_can_view>
          <tr class="<%= even_odd %> <%= row_class %>" model_id="<%= dom_id(this) %>">
            <%= tagbody.nil? ? object_link : tagbody.call %>
          </tr>
        <% even_odd = even_odd == "even" ? "odd" : "even" %>
        </if_can_view>
      </repeat>
      <%= footer %>
    </table>
  </else>
</def>


<def tag="add_by_name" attrs="action_name, add_text, update, part_id">
  <% add_to = this
     refl = this_type
     joins = this_parent.send(refl.through_reflection.name)
     add_name = refl.klass.name.titleize
     action_name ||= "Add #{add_name}"
     add_text ||= "To #{action_name.downcase} #{a_or_an add_name.downcase}, " +
                  "enter its name"
     source = refl.source_reflection.name
  %>
  <tagbody obj="#joins"/>
  <with obj="#joins.new_without_appending">
    <if_can_create>
       <object_form update="#[update, part_id]" message="#action_name" hidden_fields="*">
         <p>
           <%= add_text %>:
           <belongs_to_autocompleting_field attr="#source" where_not_in="#dom_id(add_to)" class="autosubmit"/>
           <submit_tag label="#action_name" class="text"/>
         </p>
       </object_form>
    </if_can_create>
  </with>
</def>


<def tag="spinner">
  <img src="<%= urlb %>/hobothemes/<%= Hobo.current_theme %>/images/spinner.gif" class="hidden" xattrs=""/>
</def>


<def tag="image" attrs="src">
  <img src="<%= urlb %>/images/<%= src %>" xattrs=""/>
</def>


<def tag="theme_img" attrs="src">
  <img src="<%= theme_asset('images/' + src)%>" xattrs=""/>
</def>


<def tag="search_result">
  <div class='search_result'>
    <human_type/>: <object_link/>
  </div>
</def>


<def tag="object_card">
  <div class="object_card">
    <object_link/>
  </div>
</def>


<def tag="section_if">
  <% body = tagbody.call %>
  <%= body.blank? ? "" : section{body} %>
</def>

