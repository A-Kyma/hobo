#!/usr/bin/env ruby

require 'rubygems'
require 'appscript'
require 'maruku'

TUTORIAL_CHAPTERS = %w(overview getting-started model-layer controllers dryml)

TUTORIAL_CHAPTERS.each do |chapter_name|
  html = Maruku.new(File.read("#{chapter_name}.txt")).to_html

  # Write html for conversion to PDF (below)
  File.open("#{chapter_name}.html", 'w') do |f|
    f.write(<<-END)
<html>
  <head>
    <link href="stylesheets/tutorial.css" rel="Stylesheet" type="text/css" media="all"/>
    <script src="javascripts/code_highlighter.js" type="text/javascript"></script>
    <script src="javascripts/ruby.js" type="text/javascript"></script>
    <script src="javascripts/dryml.js" type="text/javascript"></script>
  </head>
  <body>
END
    f.write(html)
    f.write("</body></html>")
  end
end

exit 0

out = nil
pages = []

html.each_line do |line|
  if line =~ /^<h1/
    out.write(<<-END) if out
</div>
</body>
</html>
END
      
    fname = line.chomp.gsub(/<[^>]*>/, "").gsub(".", "").gsub(' ', '_').downcase
    title = line.chomp.gsub('<code>', '`').gsub("</code>", '`').gsub(/<[^>]*>/, "")
      
    pages << [title, fname]
      
    out = File.open("chapters/#{fname}.html", 'w')
      
    out.write <<-END
<html>
<title>Hobo Manual: #{title}</title>
<link href="../manual.css" rel="Stylesheet" type="text/css" />
</head>
<body>
<div class='main'>
<a href="/blog/docs/">Contents</a>
END

  end
  out.write(line) if out
end

pages.each do |page|
  puts "## [#{page.first}](/manual/chapters/#{page.last}.html)\n\n"
end

# Use Safari to convert to PDF

safari = Appscript.app('Safari')
se = Appscript.app('System Events')
safari.open_location("file://#{Dir.getwd}/manual.html")
safari.activate
se.keystroke('r', :using=>[:command_down])
sleep(1)
safari.documents[0].print(:with_properties => {:target_printer => "PDF File"})
#safari.documents[0].close

`mv ~/pdf-printer/_manual_html_.pdf ./hobomanual.pdf`
