-*- indent-tabs-mode:nil; -*-

# HoboFields - Migration Generator

Our test requires to prepare the testapp:
{.hidden}

    doctest_require: 'prepare_testapp'

{.hidden}
OK we're ready to get going.

We'll define a method to make that easier next time

    >>
     def migrate(renames={})
       up, down = HoboFields::MigrationGenerator.run(renames)
       ActiveRecord::Migration.class_eval(up)
       ActiveRecord::Base.send(:subclasses).each { |model| model.reset_column_information }
       [up, down]
     end

## Alternate Primary Keys

### create

   >>
    class Foo < ActiveRecord::Base
      fields do
      end
      set_primary_key "foo_id"
    end
   >> up, down = HoboFields::MigrationGenerator.run
   >> up
   =>
     "create_table :foos, :primary_key => :foo_id do |t|
     end"
   >> migrate

### migrate from

   >>
    class Foo < ActiveRecord::Base
      set_primary_key "id"
    end
   >> up, down = HoboFields::MigrationGenerator.run({:foos => {:foo_id => :id}})
   >> up

   => "rename_column :foos, :foo_id, :id"
   >> migrate({:foos => {:foo_id => :id}})

### migrate to

   >>
    class Foo < ActiveRecord::Base
      set_primary_key "foo_id"
    end
   >> up, down = HoboFields::MigrationGenerator.run({:foos => {:id => :foo_id}})
   >> up

   => "rename_column :foos, :id, :foo_id"
   >> migrate({:foos => {:id => :foo_id}})

### ensure it doesn't cause further migrations

   >> up, down = HoboFields::MigrationGenerator.run
   >> up
   => ""

## Cleanup

    >> FileUtils.rm_rf  TEST_APP_ROOT
